  Question 1 (042): 'Copy-paste the previous query<mark>, add the given formula after the star `*`</mark>, and execute it'
    Hint (270524817733798): 'The given query uses the table `village`, not `inhabitant`.'
    Hint (278716494646762): 'The given query uses the table `village`, not `item`.'
  Question 2 (279731784972193): 'How can you see a list of all inhabitants?'
    Hint (136974024208867): 'Use the table `inhabitant`.'
    Hint (140206456605608): 'Use the table `inhabitant`.'
  Question 3 (128589543210724): 'Copy-paste the previous query<mark>, add the given formula</mark>, and execute it.'
  Question 4 (280206676651511): "Okay, let's see who is friendly on this island..."
    Hint (50457013926347): 'Some inhabitants are neither friendly or evil.'
    Hint (47890482868936): 'Filter out the evil inhabitants, not the friendly ones.'
    Hint (37150133620128): 'Filter out the evil inhabitants.'
  Question 5 (49081739277115): 'Now try to find a friendly weaponsmith to forge you one.\n\n_Tip._ You can combine predicates in the `'
  Question 6 (111903790755050): "Maybe other friendly smiths can help you out, e.g. a blacksmith.\n\n_Tip._ Try out: job LIKE '%smith' "
    Hint (71218742664725): "Keep all villagers whose job's name ends with 'smith' (e.g., 'smith', 'blacksmith', etc.)."
    Hint (75420150557596): "Filter out the villagers whose job's name doesn't ends with 'smith'."
    Hint (72792619708639): 'Filter out the villagers which are not friendly.'
  Question 7 (71115866585707): 'Execute the given `INSERT` statement. <mark>Then, list all the rows of the table `inhabitant`, with '
    Hint (18786734952407): 'Oops, it seems you have executed the `INSERT` statement twice or more. Execute the following queries'
    Hint (18186036980160): 'Oops, it seems you have executed the `INSERT` statement twice or more. Execute the following queries'
    Hint (18141288821757): 'Oops, it seems you have executed the `INSERT` statement twice or more. Execute the following queries'
    Hint (27493202200923): 'Oops, it seems you have executed the `INSERT` statement twice or more. Execute the following queries'
  Question 8 (19389891798490): 'What is your personid?'
    Hint (44650742398740): "Filter out the other persons' rows."
  Question 9 (37445107108825): 'How much gold do you have?'
    Hint (14915938923952): "Restrict the result to the Stranger's row (personid: 20)."
  Question 10 (7708171354493): "Make a list of all items that don't belong to anyone.\n\n_Tip._ You can recognize ownerless items by: "
  Question 11 (253789061748229): 'Execute the `UPDATE` statement. <mark>Afterwards, show the item table with the formula as added colu'
  Question 12 (107025105236366): 'Do you know a trick how to collect all the ownerless items? <mark>Afterwards, list all of the items '
    Hint (138282073330312): 'It seems you have failed to collect any other ownerless item. Remember: comparing to `NULL` with the'
    Hint (138996212731035): "Restrict the result to the Stranger's rows (personid: 20)."
  Question 13 (140217850902324): "Let's give them back to their rightful owners: the cane to 5, the hammer to 2 and the rope to 17. <m"
  Question 14 (204603481281422): 'Find a friendly inhabitant who is either a merchant or a dealer.'
  Question 14 (139744599079637): 'Find a friendly inhabitant who is either a merchant or a dealer.'
    Hint (167117019028817): "Your result include one evil villager. Use both `AND` and `OR`, and don't forget to put the brackets"
    Hint (161821468565730): 'You have found inhabitants who are either friendly, or dealers, or merchants, but "friendly" is not '
    Hint (166013587439609): 'Include the friendly merchants too.'
    Hint (165888542179420): 'Include the friendly dealers too.'
  Question 15 (166788243175236): 'Give Helen (`personid` 15) the two items. <mark>Afterwards, show the item table with the formula as '
  Question 16 (255787834193736): "Transfer 120 from Helen's gold to yours. <mark>Afterwards, show the inhabitant table with the formul"
  Question 17 (25101277790992): "You have correctly updated Helen's gold. Now update yours."
  Question 18 (25203292965387): "You have correctly updated your gold. Now update Helen's."
  Question 19 (46779335306464): "Update your name to 'Leslie Qualls'. <mark>Afterwards, show the inhabitant table with the formula as"
  Question 19 (845203505654): "Update your name to 'Leslie Qualls'. <mark>Afterwards, show the inhabitant table with the formula as"
  Question 19 (24919761524173): "Update your name to 'Leslie Qualls'. <mark>Afterwards, show the inhabitant table with the formula as"
    Hint (28359990687086): "The name Qualls contains two 'l's."
  Question 20 (27912063284788): 'Since baking is one of your hobbies, why not find a baker who you can work for?\n\n_Tip._ List all bak'
    Hint (34285849060722): "Don't forget to sort the result by decreasing gold."
    Hint (34285849059910): 'The gold must be sorted by decreasing order.'
    Hint (34285849061160): "Don't forget to update the token formula."
  Question 21 (34285849060426): "Transfer your salary (100) from Paul's gold to yours, and substract the price of the sword (150). <m"
  Question 22 (148615726566579): 'Is there a pilot on this island by any chance? He could fly you home.'
  Question 23 (229615318980909): 'Copy-paste the previous query<mark>, add the given formula</mark>, and execute it.'
  Question 24 (256975312978711): "Use the join to find out the chief's name of the village Onionville.\n\n_Tip._ In the column `chief` i"
    Hint (238466580765852): 'We are only interested in the chief of Onionville.'
    Hint (218198158603602): "Don't forget the join condition (`ON ...`). Without it, you make a cartesian product."
  Question 25 (240365303417698): 'Copy-paste the previous query<mark>, add the given formula</mark>, and execute it.'
  Question 26 (233051995253998): 'Shall I tell you how many women there are in Onionville? Nah, you can figure it out by yourself!\n\n_T'
    Hint (51796000688695): 'This is the population of Onionville. We are only interested in its women.'
    Hint (37373906110135): 'This is the total number of women. We are only interested in those of Onionville.'
    Hint (48955627140666): "Don't forget the join condition (`ON ...`)."
  Question 27 (41535988500868): "What's her name?"
    Hint (128655226577199): 'Restrict the result to Onionville.'
    Hint (136221754469805): 'Restrict the result to the women.'
  Question 28 (124493698100759): 'Copy-paste the previous query<mark>, add the given formula</mark>, and execute it.'
  Question 29 (157771240628108): 'Sum the gold of all these people.'
    Hint (193594500728372): 'Restrict your queries to the bakers, dealers and merchants together.'
  Question 30 (205678511338701): 'Copy-paste the previous query, add the given formula, and execute it.'
  Question 31 (227531204698033): 'Execute the previous statement. <mark>Afterwards, show the item table with the formula as added colu'
  Question 32 (198001479871924): 'Delete Dirty Diane. <mark>Afterwards, show the inhabitant table with the formula as added column.</m'
  Question 33 (66098661366712): "Change the pilot's status to 'friendly', your own status to 'emigrated'. <mark>Afterwards, show the "
  Question 34 (214187513069315): "You have correctly updated the pilot's status. Now update yours to 'emigrated'. <mark>Afterwards, sh"
  Question 35 (225550015813321): "You have correctly updated your status. Now update the pilot's state to 'friendly'. <mark>Afterwards"
  Question 36 (255276062128450): ''
  Question 36 (148646393118578): ''
  Question 36 (213893536427211): ''
